on:
  push:
    branches:
      - main
    paths:
      - '**.rs'
      - Cargo.toml
      - Cargo.lock
      - .github/workflows/cargo-clippy.yml
      - 'rust-toolchain'
      - 'rust-toolchain.toml'
  pull_request:
    paths:
      - '**.rs'
      - Cargo.toml
      - Cargo.lock
      - .github/workflows/cargo-build.yml
      - 'rust-toolchain'
      - 'rust-toolchain.toml'
name: cargo clippy
jobs:
  cargoclippy:
    name: cargo clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Cleanup unused space
        shell: bash
        run: |
          set -x
          df -h /
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/microsoft
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/lib/jvm
          sudo rm -rf /usr/local/graalvm
          sudo rm -rf /usr/local/share/powershell
          sudo rm -rf /usr/share/swift
          df -h /
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10
      - name: Install latest rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
            components: rustfmt, clippy
      - name: Cache cargo registry
        uses: actions/cache@v4.2.2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v4.2.2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v4.2.2
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Check workflow permissions
        id: check_permissions
        uses: scherermichael-oss/action-has-permission@1.0.6
        with:
          required-permission: write
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: steps.check_permissions.outputs.has-permission
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all --exclude engine
      - name: Run clippy manually without annotations
        if: ${{ !steps.check_permissions.outputs.has-permission }}
        run: cargo clippy --all
