openapi: 3.0.0
info:
  title: API Reference
  version: '1.0'
  contact:
    name: Rippling Support
    email: support@rippling.com
  license:
    name: MIT
  description: |-
    Using Rippling's API requires either an API key or an access token retrieved from an OAuth exchange. Each is tied to a single Rippling Company.

    If you are a partner building an integration to Rippling,you can use [Rippling's Installation Guide](https://developer.rippling.com/docs/rippling-api/fucwnbc121hiu-installation-guide) to learn how to retrieve an access token to start using Rippling APIs.

    If you are a customer, you can go [here](https://developer.rippling.com/docs/rippling-api/9rw6guf819r5f-introduction-for-customers) to learn create your API keys to start using Rippling APIs.

    ### Using the Interactive Documentation

    Rippling's Documentation Portal allows you to test the API endpoints directly within the documentation. To do so, provide your API key or Access Token as a header parameter with the form Authorization Bearer: Bearer.
  termsOfService: 'https://app.rippling.com/developer/tos'
servers:
  - url: 'https://api.rippling.com'
    description: Production
tags:
  - name: A. Companies
  - name: B. Employees
  - name: C. Payroll
  - name: D. 401k
  - name: F. Groups
  - name: G. SAML
  - name: E. Current User
  - name: H. ATS
  - name: I. Application Management
  - name: J. Leaves
paths:
  /platform/api/companies/current:
    get:
      summary: GET Current Company
      operationId: get-companies
      description: 'Returns the currently accessible company for the given token. Please note, the returned fields depend on the scopes that are enabled for your access token or API key.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
              examples:
                example-1:
                  value:
                    id: string
                    address:
                      city: string
                      streetLine1: string
                      zip: string
                      country: string
                      state: string
                      streetLine2: string
                    workLocations:
                      - id: string
                        nickname: string
                        address:
                          city: string
                          streetLine1: string
                          zip: string
                          country: string
                          state: string
                          streetLine2: string
                    primaryEmail: string
                    phone: string
                    name: string
      parameters: []
      security:
        - Token: []
      tags:
        - A. Companies
      x-stoplight:
        id: 5p60h6uqioozm
    parameters: []
  /platform/api/departments:
    get:
      summary: GET Departments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: An array of department objects.
                items:
                  $ref: '#/components/schemas/Department'
              examples:
                Success:
                  value:
                    - name: Sales
                      id: 62037ae4d482ff8219a73196
                      parent: 5ec5595ffa9c4e1728118d6f
                    - name: SMB
                      id: 609069a5c8e8f044cf44e997
                      parent: null
      operationId: get-departments
      description: Returns a list of departments for the given company.
      security:
        - Token: []
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      tags:
        - A. Companies
      x-stoplight:
        id: sl774k0ddr3es
    parameters: []
  /platform/api/employees:
    get:
      summary: GET Employees
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
              examples:
                example-1:
                  value:
                    - id: string
                      name: string
                      firstName: string
                      lastName: string
                      employmentType: CONTRACTOR
                      title: string
                      gender: MALE
                      identifiedGender: MALE
                      department: string
                      workLocation:
                        city: string
                        streetLine1: string
                        zip: string
                        country: string
                        state: string
                        streetLine2: string
                      workLocationNickname: string
                      spokeId: string
                      endDate: string
                      roleState: INIT
                      workEmail: string
                      manager: string
                      customFields:
                        Id: string
                        type: TEXT
                        title: string
                        required: true
                      workSchedule:
                        MONDAY:
                          hours: 8
                        TUESDAY:
                          hours: 8
                        WEDNESDAY:
                          hours: 8
                        THURSDAY:
                          hours: 8
                        FRIDAY:
                          hours: 8
                        SATURDAY:
                          hours: 0
                        SUNDAY:
                          hours: 0
                      isRemote: true
      operationId: get-employees
      security:
        - Token: []
      description: |-
        Retrieves the list of active employees currently provisioned within the application. The fields retrieved depend on the employee scopes that you have access to for your access token or API key. The only guarenteed fields include id, personalEmail, and roleState.

        For optimal performance, ensure pagination is used via our limit and offset parameters. Pagination should be set to a maximum of 100.
      tags:
        - B. Employees
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      x-stoplight:
        id: ebwuc4p5eymu8
    parameters: []
  /platform/api/work_locations:
    get:
      summary: GET Work Locations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkLocation'
              examples:
                example-1:
                  value:
                    - nickname: string
                      address:
                        city: string
                        streetLine1: string
                        zip: string
                        country: string
                        state: string
                        streetLine2: string
      operationId: get-work_locations
      description: Returns the list of work locations for a given company.
      security:
        - Token: []
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      tags:
        - A. Companies
      x-stoplight:
        id: pqmhoffeo0egu
    parameters: []
  /platform/api/custom_fields:
    get:
      summary: GET Custom Fields
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFields'
              examples:
                Success:
                  value:
                    - type: SELECT
                      title: What is your race / ethnicity?
                      caption: null
                      required: false
                    - type: SELECT
                      title: Veteran Status
                      caption: null
                      required: false
                    - type: SELECT
                      title: What is your Gender?
                      caption: null
                      required: false
                    - type: SELECT
                      title: Disability Status
                      caption: null
                      required: false
                    - type: SELECT
                      title: How will this employee be classified for EEO reporting?
                      caption: null
                      required: true
                    - type: NUMBER
                      title: Data2
                      caption: null
                      required: true
                    - type: DATE
                      title: Data1
                      caption: null
                      required: true
                    - type: TEXTAREA
                      title: Data3
                      caption: null
                      required: true
                    - type: TEXT
                      title: Data4
                      caption: null
                      required: true
                    - type: TEXT
                      title: send notification again
                      caption: null
                      required: true
                    - type: FILE
                      title: offboard
                      caption: null
                      required: true
                    - type: TEXT
                      title: severance test variable
                      caption: null
                      required: false
                    - type: TEXT
                      title: Favorite Animal
                      caption: null
                      required: true
                    - type: TEXT
                      title: additional variable
                      caption: null
                      required: true
      operationId: get-custom_fields
      description: Returns the custom fields for the given company.
      security:
        - Token: []
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      tags:
        - A. Companies
      x-stoplight:
        id: c6dqbgoi5tyir
    parameters: []
  /platform/api/teams:
    get:
      summary: GET Teams
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
              examples:
                Success:
                  value:
                    - name: Applications
                      id: 5ee6c69bbc3bc7293a217ff2
                      parent: null
                    - name: Identity
                      id: 5ee6c6a2fa9c4e3d71cc32d7
                      parent: null
                    - name: Hardware
                      id: 5ee6c6a7bc3bc7293a217ff6
                      parent: null
                    - name: Payroll
                      id: 5ee6c6abbc3bc72c3f6b88ef
                      parent: null
      operationId: get-teams
      description: Retrieves the list of teams for the company.
      security:
        - Token: []
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      tags:
        - A. Companies
      x-stoplight:
        id: qzv0ddv3ngsp3
    parameters: []
  /platform/api/levels:
    get:
      summary: GET Levels
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Level'
              examples:
                Success:
                  value:
                    - name: Representative
                      id: 5ee6c643bc3bc72b7f40e04a
                      parent: null
                    - name: Executive
                      id: 5ee6c649bc3bc72cfcb9d3b8
                      parent: null
                    - name: Manager
                      id: 5ee6c6bdbc3bc7293a217ffc
                      parent: null
      operationId: get-levels
      description: 'Retrieves the levels for the company. Levels are set positions for an organization, such as Manager, or Executive.'
      security:
        - Token: []
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      tags:
        - A. Companies
      x-stoplight:
        id: 0mz71uqr6d6uv
    parameters: []
  '/platform/api/employees/{employeeId}':
    parameters:
      - name: employeeId
        in: path
        description: Unique identifier for the employee within Rippling.
        schema:
          type: string
        required: true
    get:
      summary: GET Employee
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
              examples:
                example-1:
                  value:
                    id: string
                    name: string
                    firstName: string
                    lastName: string
                    employmentType: CONTRACTOR
                    photo: string
                    smallPhoto: string
                    title: string
                    gender: MALE
                    identifiedGender: MALE
                    department: string
                    workLocation:
                      city: string
                      streetLine1: string
                      zip: string
                      country: string
                      state: string
                      streetLine2: string
                    worklocationNickname: string
                    spokeId: string
                    endDate: string
                    roleState: INIT
                    workEmail: string
                    manager: string
                    customFields:
                      Id: string
                      type: TEXT
                      title: string
                      required: true
                    workSchedule:
                      MONDAY:
                        hours: 8
                      TUESDAY:
                        hours: 8
                      WEDNESDAY:
                        hours: 8
                      THURSDAY:
                        hours: 8
                      FRIDAY:
                        hours: 8
                      SATURDAY:
                        hours: 0
                      SUNDAY:
                        hours: 0
                    isRemote: true
      operationId: get-employees-employeeId
      description: Retrieves the information for a single employee based on the scopes that your API key or access token have access to.
      security:
        - Token: []
      tags:
        - B. Employees
      x-stoplight:
        id: q28s4hbu6sqpw
  /platform/api/employees/include_terminated:
    get:
      summary: GET Employees (Including Terminated)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
              examples:
                example-1:
                  value:
                    - id: string
                      name: string
                      firstName: string
                      lastName: string
                      employmentType: CONTRACTOR
                      title: string
                      gender: MALE
                      identifiedGender: MALE
                      department: string
                      workLocation:
                        city: string
                        streetLine1: string
                        zip: string
                        country: string
                        state: string
                        streetLine2: string
                      worklocationNickname: string
                      spokeId: string
                      endDate: string
                      roleState: INIT
                      workEmail: string
                      manager: string
                      customFields:
                        Id: string
                        type: TEXT
                        title: string
                        required: true
                      workSchedule:
                        MONDAY:
                          hours: 8
                        TUESDAY:
                          hours: 8
                        WEDNESDAY:
                          hours: 8
                        THURSDAY:
                          hours: 8
                        FRIDAY:
                          hours: 8
                        SATURDAY:
                          hours: 0
                        SUNDAY:
                          hours: 0
                      isRemote: true
      operationId: get-employees-include_terminated
      description: |-
        This endpoint is similar to the active employees endpoint, but instead, it includes both active and terminated employees.

        For optimal performance, ensure pagination is used via our limit and offset parameters. Pagination should be set to a maximum of 100.
      security:
        - Token: []
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/ein'
        - schema:
            type: boolean
          in: query
          name: send_all_roles
          description: 'For integrations that rely on provisioning, this parameter can be used to identify non provisioned roles for compliance purposes. TRUE will return every employee from the company (bypassing any access rules).'
      tags:
        - B. Employees
      x-stoplight:
        id: f0wza3kg7ot43
    parameters: []
  /platform/api/me:
    get:
      summary: GET Current User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticated-User-(Me)'
              examples:
                Success:
                  value:
                    id: 5ec5595dfa9c4e1728118d11
                    workEmail: cpitt+2@rippling.com
                    company: 5ec5595afa9c4e1728118cb5
      operationId: get-me
      description: Retrieves basic information about the Rippling user whose access token you're using. This is generally used for the SSO flow.
      security:
        - Token: []
      tags:
        - E. Current User
      x-stoplight:
        id: etnldtzb56wyg
    parameters: []
  /platform/api/groups:
    get:
      summary: GET Groups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
              examples:
                Success:
                  value:
                    - id: 5f397ed33ca04e4ab23246c2
                      spokeId: 123456xvbnm12345678912354939
                      name: GroupTest3
                      users: []
                      version: t4lz8cjhc54ludro
                    - id: 5f397f3b3ca04e478d4575ad
                      spokeId: lkjwbfskjsdbllskdb
                      name: GroupTest4
                      users:
                        - 5c8f7f06c592917aeee1ea9f
                      version: uu8ccavwbsb8stfn
      operationId: get-groups
      description: |-
        Please note, the Groups endpoint requires an OAuth application (i.e. approved 3rd party partners), as the end point is intended for mapping third-party application “Groups” within Rippling organizations.

        Lists the current third-party groups for an organization.
      security:
        - Token: []
      tags:
        - F. Groups
      x-stoplight:
        id: qk9ir92fyn7qr
    parameters: []
    post:
      summary: POST Groups
      operationId: post-groups
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
              examples:
                Success:
                  value:
                    id: 5f397f3b3ca04e478d4575ad
                    spokeId: lkjwbfskjsdbllskdb
                    name: GroupTest4
                    users:
                      - 5c8f7f06c592917aeee1ea9f
                    version: uu8ccavwbsb8stfn
      description: 'Creates a generic group, that can be associated within the third-party application.'
      security:
        - Token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: User-readable name of the group.
                spokeId:
                  type: string
                  description: 'The unique ID for the group, this can be the unique identifier for the group entity object within your application.'
                users:
                  type: array
                  description: An array of Rippling IDs that will be in the group.
                  items:
                    type: string
            examples:
              New Group:
                value:
                  name: GroupTest4
                  spokeId: lkjwbfskjsdbllskdb
                  users:
                    - 5c8f7f06c592917aeee1ea9f
        description: A group object.
      tags:
        - F. Groups
      x-stoplight:
        id: jxy09npxocnck
  '/platform/api/groups/{groupId}':
    parameters:
      - name: groupId
        in: path
        description: Unique identifier for the group within Rippling.
        schema:
          type: integer
        required: true
    put:
      summary: PUT Group
      operationId: put-groups-groupId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
              examples:
                Success:
                  value:
                    id: 5f397f3b3ca04e478d4575ad
                    spokeId: lkjwbfskjsdbllskdb
                    name: GroupTest
                    users: []
                    version: yvmzhfw50hn39aas
      description: |-
        Please note, the Groups endpoint requires an OAuth application (i.e. approved 3rd party partners), as the end point is intended for mapping third-party application “Groups” within Rippling organizations.

        Using the PUT method, all of the group fields will be updated, even if the corresponding parameter is missing. If the PATCH method is used, and a param is missing, its value won’t be changed.
      security:
        - Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdatePayload'
            examples:
              Sample:
                value:
                  name: GroupTest
                  spokeId: lkjwbfskjsdbllskdb
                  users:
                    - ''
                  version: uu8ccavwbsb8stfn
        description: Group updates object.
      tags:
        - F. Groups
      x-stoplight:
        id: us4excdz9agg0
    get:
      summary: GET Group
      operationId: get-groups-groupId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
              examples:
                Success:
                  value:
                    id: 5f397f3b3ca04e478d4575ad
                    spokeId: lkjwbfskjsdbllskdb
                    name: GroupTest
                    users: []
                    version: yvmzhfw50hn39aas
      description: 'Please note, the Groups endpoint requires an OAuth application (i.e. approved 3rd party partners), as the end point is intended for mapping third-party application “Groups” within Rippling organizations.'
      security:
        - Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdatePayload'
            examples:
              Sample:
                value:
                  name: GroupTest
                  spokeId: lkjwbfskjsdbllskdb
                  users:
                    - ''
                  version: uu8ccavwbsb8stfn
        description: Group updates object.
      tags:
        - F. Groups
    patch:
      summary: PATCH Group
      operationId: patch-groups-groupId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
              examples:
                Updated Group:
                  value:
                    id: 5f397f3b3ca04e478d4575ad
                    spokeId: lkjwbfskjsdbllskdb
                    name: GroupTest
                    users: []
                    version: yvmzhfw50hn39aas
      description: |-
        Please note, the Groups endpoint requires an OAuth application (i.e. approved 3rd party partners), as the end point is intended for mapping third-party application “Groups” within Rippling organizations.

        Using the PUT method, all of the group fields will be updated, even if the corresponding parameter is missing. If the PATCH method is used, and a param is missing, its value won’t be changed.
      security:
        - Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdatePayload'
            examples:
              Sample:
                value:
                  name: GroupTest
                  spokeId: lkjwbfskjsdbllskdb
                  users: []
                  version: yvmzhfw50hn39aas
        description: Group updates object.
      tags:
        - F. Groups
      x-stoplight:
        id: w1yvh0c4nq9ng
    delete:
      summary: DELETE Group
      operationId: delete-groups-groupId
      responses:
        '200':
          description: OK
      description: |-
        Please note, the Groups endpoint requires an OAuth application (i.e. approved 3rd party partners), as the end point is intended for mapping third-party application “Groups” within Rippling organizations.

        Deletes the specified group.
      security:
        - Token: []
      tags:
        - F. Groups
      x-stoplight:
        id: bapambfnc4z0n
  /platform/api/leave_requests:
    get:
      summary: GET Leave Requests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeaveRequest'
              examples:
                Success:
                  value:
                    - id: 5b998dfb40cae798a83e8874
                      createdAt: '2018-08-12T15:06:51.681000-07:00'
                      updatedAt: '2018-08-13T15:06:51.684000-07:00'
                      role: 5ae0b2cb40cae73202bd66cc
                      roleName: Jane Doe
                      requestedBy: 5ae0b2cb40cae73202bd66cc
                      requestedByName: Jane Doe
                      status: APPROVED
                      startDate: '2018-08-22'
                      endDate: '2018-08-24'
                      startDateStartTime: '2018-08-22T12:00:00.235000-07:00'
                      endDateEndTime: '2018-08-24T15:00:00.235000-07:00'
                      startDateCustomHours: 8
                      endDateCustomHours: 4
                      comments: null
                      numHours: 20
                      numMinutes: 1200
                      leavePolicy: 5b998cf940cae798a83e87fd
                      leaveType: VACATION
                      policyDisplayName: Vacation
                      processedAt: '2018-08-13T15:06:51.684000-07:00'
                      processedBy: 5ae0b2cb40cae73202bd66cc
                      processedByName: Funky Admin
                      reasonForLeave: Visiting hometown for my brother’s wedding
                      externalId: qwerty12345
                      roleTimezone: America/Los_Angeles
                      dates:
                        - date: '2018-08-22'
                          numMinutes: 480
                        - date: '2018-08-23'
                          numMinutes: 480
                        - date: '2018-08-24'
                          numMinutes: 240
      operationId: get-leave_requests
      description: Retrieves the current leave requests.The query can be filtered by a number of specific query parameters.
      parameters:
        - schema:
            type: string
          in: query
          name: id
        - schema:
            type: string
          in: query
          name: role
        - schema:
            type: string
          in: query
          name: requestedBy
        - schema:
            type: string
          in: query
          name: status
        - schema:
            type: string
          in: query
          name: startDate
          description: Start date of leave.
        - schema:
            type: string
          in: query
          name: endDate
          description: End date of leave.
        - schema:
            type: string
          in: query
          name: leavePolicy
        - schema:
            type: string
          in: query
          name: processedBy
        - schema:
            type: string
          in: query
          name: from
          description: Filter to capture whether the leave request overlaps with a date range.
        - schema:
            type: string
          in: query
          name: to
          description: Filter to capture whether the leave request overlaps with a date range.
        - schema:
            type: string
          in: query
          name: limit
          description: Sets a limit on the returned values
        - schema:
            type: string
          in: query
          name: offset
          description: Offsets the returned values
      security:
        - Token: []
      tags:
        - J. Leaves
      x-stoplight:
        id: 46dek0wrkjep8
    post:
      summary: POST Leave Request
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveRequest'
              examples:
                Success:
                  value:
                    - id: 5b998dfb40cae798a83e8874
                      createdAt: '2018-08-12T15:06:51.681000-07:00'
                      updatedAt: '2018-08-13T15:06:51.684000-07:00'
                      role: 5ae0b2cb40cae73202bd66cc
                      roleName: Jane Doe
                      requestedBy: 5ae0b2cb40cae73202bd66cc
                      requestedByName: Jane Doe
                      status: PENDING
                      startDate: '2018-08-22'
                      endDate: '2018-08-24'
                      startDateStartTime: '2018-08-22T12:00:00.235000-07:00'
                      endDateEndTime: '2018-08-24T15:00:00.235000-07:00'
                      startDateCustomHours: 8
                      endDateCustomHours: 4
                      comments: null
                      numHours: 20
                      numMinutes: 1200
                      leavePolicy: 5b998cf940cae798a83e87fd
                      leaveType: VACATION
                      policyDisplayName: Vacation
                      processedAt: null
                      processedBy: null
                      processedByName: null
                      reasonForLeave: Visiting hometown for my brother’s wedding
                      externalId: qwerty12345
                      roleTimezone: America/Los_Angeles
                      dates:
                        - date: '2018-08-22'
                          numMinutes: 480
                        - date: '2018-08-23'
                          numMinutes: 480
                        - date: '2018-08-24'
                          numMinutes: 240
      operationId: post-leave_requests
      description: Create a leave request. This endpoint is currently in alpha and should not be used by default. Only TILT managed requests can have a status other than PENDING.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - role
                - startDate
                - endDate
                - companyLeaveType
                - leavePolicy
              properties:
                role:
                  type: string
                  description: Unique identifier of the employee who is taking leave.
                requestedBy:
                  type: string
                status:
                  type: string
                  x-stoplight:
                    id: v5a9k7lkpbeln
                  description: The status to create the leave request in. Only TILT managed requests can take a status other than PENDING.
                startDate:
                  type: string
                endDate:
                  type: string
                startDateStartTime:
                  type: string
                endDateEndTime:
                  type: string
                startDateCustomHours:
                  type: string
                endDateCustomHours:
                  type: string
                companyLeaveType:
                  type: string
                  description: Unique identifier of the company leave type
                leavePolicy:
                  type: string
                  description: Unique identifier of the leave policy. Required if request is not managed by TILT
                reasonForLeave:
                  type: string
                managedBy:
                  type: string
                  description: String identifier for third party that manages this leave request. This may be null.
                externalId:
                  type: string
                  description: Object id for corresponding leave obejct in third party system. This may be null.
            examples:
              New LeaveRequest:
                value:
                  role: 5ae0b2cb40cae73202bd66cc
                  status: PENDING
                  startDate: '2018-08-22'
                  endDate: '2018-08-24'
                  startDateStartTime: '2018-08-22T12:00:00.235000-07:00'
                  endDateEndTime: '2018-08-24T15:00:00.235000-07:00'
                  startDateCustomHours: '8'
                  endDateCustomHours: '4'
                  reasonForLeave: Visiting hometown for my brother’s wedding
                  companyLeaveType: 4c397f3b3c304e478da575da
                  leavePolicy: 5b998cf940cae798a83e87fd
      security:
        - Token: []
      tags:
        - J. Leaves
      x-stoplight:
        id: 8x6t6az954nqd
    parameters: []
  /platform/api/company_leave_types:
    get:
      summary: GET Company Leave Types
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyLeaveType'
              examples:
                Success:
                  value:
                    - id: 5b998dfb40cae798a83e8874
                      leaveType: VACATION
                      name: Vacation
                      description: ''
                      isUnpaid: false
      operationId: get-company_leave_types
      description: Retrieves the current company leave types. The query can be filtered by managedBy field.
      parameters:
        - schema:
            type: string
          in: query
          name: managedBy
      security:
        - Token: []
      tags:
        - A. Companies
      x-stoplight:
        id: sike025s6tfiw
    parameters: []
  /platform/api/leave_balances:
    get:
      summary: GET Leave Balances
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    type: string
                    x-stoplight:
                      id: ds5agfkx834js
                  balances:
                    $ref: '#/components/schemas/LeaveBalances'
              examples:
                Example 1:
                  value:
                    - role: 583fd880a7b6897c1ed03604
                      balances:
                        - companyLeaveType: 639b3ab7fb9a2a208aeb3c22
                          isBalanceUnlimited: true
                        - companyLeaveType: 639b3ab8fb9a2a208aeb3c4b
                          isBalanceUnlimited: true
                        - companyLeaveType: 583fd8cfa7b6897c1ed034a7
                          balanceWithFutureRequests: '13637.26'
                          balanceWithoutFutureRequests: '16997.26'
                          isBalanceUnlimited: false
                        - companyLeaveType: 583fd8cfa7b6897c1ed034a9
                          balanceWithFutureRequests: '11331.51'
                          balanceWithoutFutureRequests: '11331.51'
                          isBalanceUnlimited: false
                    - role: 583fd884a7b6897c1ed036e2
                      balances:
                        - companyLeaveType: 639b3ab7fb9a2a208aeb3c22
                          isBalanceUnlimited: true
                        - companyLeaveType: 639b3ab8fb9a2a208aeb3c4b
                          isBalanceUnlimited: true
                        - companyLeaveType: 583fd8cfa7b6897c1ed034a7
                          balanceWithFutureRequests: '17118.08'
                          balanceWithoutFutureRequests: '17118.08'
                          isBalanceUnlimited: false
                        - companyLeaveType: 583fd8cfa7b6897c1ed034a9
                          balanceWithFutureRequests: '12692.05'
                          balanceWithoutFutureRequests: '12692.05'
                          isBalanceUnlimited: false
      operationId: get-leave_balances
      description: Retrieves the leave balances for employees
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
          description: Sets a limit on the returned values
        - schema:
            type: integer
          in: query
          name: offset
          description: Offset the returned values
      security:
        - Token: []
      tags:
        - J. Leaves
      x-stoplight:
        id: p4yrmui3koqp2
    parameters: []
  '/platform/api/leave_balances/{role}':
    get:
      summary: GET Leave Balance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    type: string
                    x-stoplight:
                      id: ds5agfkx834js
                  balances:
                    $ref: '#/components/schemas/LeaveBalances'
              examples:
                Example 1:
                  value:
                    role: 583fd880a7b6897c1ed03604
                    balances:
                      - companyLeaveType: 639b3abdfb9a2a208aeb3ceb
                        isBalanceUnlimited: true
                      - companyLeaveType: 639b3abdfb9a2a208aeb3ce7
                        isBalanceUnlimited: true
                      - companyLeaveType: 583fd8cfa7b6897c1ed034a7
                        balanceWithFutureRequests: '13637.26'
                        balanceWithoutFutureRequests: '16997.26'
                        isBalanceUnlimited: false
                      - companyLeaveType: 583fd8cfa7b6897c1ed034a9
                        balanceWithFutureRequests: '11331.51'
                        balanceWithoutFutureRequests: '11331.51'
                        isBalanceUnlimited: false
      operationId: get-leave_balance
      description: Retrieves the leave balances for a given role. A role represents 1 employee. An employee can work at 1 and only 1 company.
      parameters: []
      security:
        - Token: []
      tags:
        - J. Leaves
      x-stoplight:
        id: of2pp2jct60yb
    parameters:
      - schema:
          type: string
        name: role
        in: path
        required: true
        description: This is the unique role ID of the employee. It corresponds to the IDs returned in the Get/employees endpoint
  /platform/api/saml/idp_metadata:
    get:
      summary: GET SAML Metadata
      responses:
        '200':
          description: OK
          content:
            application/xml:
              schema:
                description: SAML Metadata returned in XML
                type: string
              examples:
                Sample:
                  value: |-
                    <?xml version='1.0' encoding='UTF-8'?>
                    <ns0:EntityDescriptor xmlns:ns0="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:ns1="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:ns2="http://www.w3.org/2000/09/xmldsig#" entityID="https://www.rippling.com/5f381c24d22e3e099d41c727/idp.xml" validUntil="2030-06-26T03:30:26Z"><ns0:Extensions><ns1:DigestMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#md5" /><ns1:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#ripemd160" /><ns1:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1" /><ns1:DigestMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#sha224" /><ns1:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256" /><ns1:DigestMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#sha384" /><ns1:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha512" /><ns1:SigningMethod Algorithm="http,//www.w3.org/2000/09/xmldsig#dsa-sha1" /><ns1:SigningMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-md5" /><ns1:SigningMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-ripemd160" /><ns1:SigningMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1" /><ns1:SigningMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha224" /><ns1:SigningMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256" /><ns1:SigningMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha384" /><ns1:SigningMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha512" /></ns0:Extensions><ns0:IDPSSODescriptor WantAuthnRequestsSigned="false" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol"><ns0:KeyDescriptor use="signing"><ns2:KeyInfo><ns2:X509Data><ns2:X509Certificate>MIICZDCCAc0CBAE+aoEwDQYJKoZIhvcNAQELBQAweDELMAkGA1UEBhMCVVMxCzAJ
                    BgNVBAgMAkNBMQswCQYDVQQHDAJTRjERMA8GA1UECgwIUmlwcGxpbmcxITAfBgNV
                    BAsMGEFhbWlyIFByb2QgW1Rlc3RdIFBvcnRhbDEZMBcGA1UEAwwQd3d3LnJpcHBs
                    aW5nLmNvbTAgFw0yMDA4MTcwMzMwMjRaGA8yMTIwMDcyNDAzMzAyNFoweDELMAkG
                    A1UEBhMCVVMxCzAJBgNVBAgMAkNBMQswCQYDVQQHDAJTRjERMA8GA1UECgwIUmlw
                    cGxpbmcxITAfBgNVBAsMGEFhbWlyIFByb2QgW1Rlc3RdIFBvcnRhbDEZMBcGA1UE
                    AwwQd3d3LnJpcHBsaW5nLmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
                    yNF48+Of3Lc4VsgcDi+trDYsC4zerzzbNtD7OaZibdUuTY77p2NILW2QW2A5Q2Nf
                    eCahkWk3egyY0wm7eiczclzrM676uTpPyG/g7nJMfmdEFQf7uxh/OVMbXyD6e8No
                    9ck8k1Antz28At761xmnXyl+mMcUDy6lTGFkK8/gnTUCAwEAATANBgkqhkiG9w0B
                    AQsFAAOBgQAbO8K/SSkeMD9cPv6d2VWdF2TjuhVNgfiB74qnOc8NZ8OwfY7brd0+
                    KFJAJ1nwXlBZuJ8OG0KnTranRWHMXTTckFUd4othNARFolC2m4OAmi7IrobMbtlH
                    hDbqT2JWPqdOTv1GE72xQe0deh3WzFLp6saxqE5Xg9sVZ9KJACa2rA==
                    </ns2:X509Certificate></ns2:X509Data></ns2:KeyInfo></ns0:KeyDescriptor><ns0:SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://www.rippling.com/api/platform/sso/sp-initiated/5f381c24d22e3e099d41c727" /><ns0:SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://www.rippling.com/api/platform/sso/sp-initiated/5f381c24d22e3e099d41c727" /></ns0:IDPSSODescriptor><ns0:Organization><ns0:OrganizationName xml:lang="en">Rippling</ns0:OrganizationName><ns0:OrganizationDisplayName xml:lang="en">Rippling</ns0:OrganizationDisplayName><ns0:OrganizationURL xml:lang="en">https: //www.rippling.com</ns0:OrganizationURL></ns0:Organization><ns0:ContactPerson contactType="support"><ns0:GivenName>Support</ns0:GivenName><ns0:EmailAddress>support@rippling.com</ns0:EmailAddress></ns0:ContactPerson></ns0:EntityDescriptor>
      operationId: get-saml-idp_metadata
      security:
        - Token: []
      description: |-
        Returns a SAML IDP metadata file for the current app integration. Note that this endpoint is only accessible using a token associated with an app integration that has SAML enabled; otherwise it returns a 404 error.

        Rippling's SAML Metadata is per customer app installation. It is not the same across all customers. It is not the same if the customer uninstalls and reinstalls your app. Any time a new app is installed, unique SAML Metadata will be generated specific to that app.
      tags:
        - G. SAML
      x-stoplight:
        id: ffogkuqtkiwcx
    parameters: []
  /platform/api/ats_candidates/push_candidate:
    post:
      summary: POST New Candidate
      operationId: post-ats_candidates-push_candidate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidate'
      description: |-
        Pushes a candidate from an applicant tracking system directly into the Rippling onboarding flow. Please note, this endpoint is only available to applications integrating with OAuth2.0.

        NOTE: This endpoint is NOT available for use with Rippling customer API Keys.
      security:
        - Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Candidate'
        description: ''
      tags:
        - H. ATS
      x-stoplight:
        id: lwstyxi1y3j1p
    parameters: []
  /platform/api/company_activity:
    get:
      summary: GET Company Activity
      tags:
        - A. Companies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    nullable: true
                    properties:
                      events:
                        type: array
                        nullable: true
                        items:
                          $ref: '#/components/schemas/Event'
                      next:
                        type: string
                  error:
                    type: string
                    nullable: true
              examples:
                Success:
                  value:
                    data:
                      events:
                        - id: 5ed7052182a6a429a4af3fb9
                          request_data: null
                          linked_events: []
                          subjects:
                            - instance: 5c6324b602bf9a760b7a4329
                              type: GROUP
                              display_name: Everyone
                              icon: null
                            - instance: 5c6324b502bf9a760b7a4318
                              type: SPOKE_USER
                              display_name: apps+test@rippling.com
                              icon: null
                            - instance: 5ca35d3b6ab9e20acc4e83e3
                              type: ROLE
                              display_name: Swag Test
                              icon: null
                          event_type: EXTERNAL_GROUP_MEMBER_REMOVE
                          timestamp: '2020-06-02T19:04:17.375000-07:00'
                          company: 595f75ffd2a5f80ae22ce88e
                          spoke: 5c63187a3698be3692ce328f
                          owner: 5c63232bc5929135ddadbfab
                          initiator:
                            type: EXTERNAL
                            role: null
                            display_name: External
                            icon: null
                          event_reason:
                            reason: CHANGE_SYNCED_FROM_EXTERNAL_APP
                            message: Activity emanated from External App
                          name: Account removed from group
                      next: 5f4d9d82f6c26e0a83aa6ea8
                    error: null
      operationId: get-company_activity
      description: |
        Retrieves the activity for a given company.

        The most reliable method to ingest all activity from Rippling is to use a pagination cursor via the 'next' parameter. This will ensure that events are not skipped or duplicated due to the lack of timestamp precision.

        The general sequence of steps to leverage the next parameter:

        1. Issue an initial request using startDate with a value set to some date in the last 90 days
        2. Retrieve the next page of events through the next value from the response data.
        3. Issue the paginated request
        4. Retrieve the next page of events through the next value from the response data
        5. Pause and repeat the previous step
      security:
        - Token: []
      parameters:
        - schema:
            type: string
            format: date
          in: query
          name: startDate
          description: Timestamp to list activity after (inclusive). This should be less than 90 days from now. Defaults to 90 days.
        - schema:
            type: string
            format: date
          in: query
          name: endDate
          description: Timestamp to list activity before (inclusive).
        - schema:
            type: string
          in: query
          name: next
          description: Specifies the pagination cursor to the next page
        - schema:
            type: string
          in: query
          name: limit
          description: 'Specifies the number of results to page (maximum: 1000) (default: 1000)'
      x-stoplight:
        id: emjudy2imdhm2
    parameters: []
  '/platform/api/leave_requests/{id}/cancel':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique identifier of the leave request being canceled.
    post:
      summary: POST Cancel Leave Request
      operationId: cancel-leave_requests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveRequest'
              examples: {}
      security:
        - Token: []
      description: Cancel a leave request.
      tags:
        - J. Leaves
  '/platform/api/leave_requests/{id}/process':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique identifier of the leave request being processed.
    post:
      summary: POST Process Leave Request
      operationId: process-leave_requests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveRequest'
              examples: {}
      security:
        - Token: []
      parameters:
        - schema:
            type: string
            enum:
              - approve
              - decline
          in: query
          name: action
          required: true
          description: The action to be taken on the leave request. Can be either approved or declined.
      description: Approve or decline a leave request. Only pending requests can be processed (approved / declined). Only an admin or manager is capable of taking action on a request.
      tags:
        - J. Leaves
      x-stoplight:
        id: ihweo9vw3rk76
  '/platform/api/leave_requests/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Unique identifier of the leave request being modified
    patch:
      summary: PATCH Leave Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeaveRequest'
              examples:
                Updated LeaveRequest:
                  value:
                    - id: 5b998dfb40cae798a83e8874
                      createdAt: '2018-08-12T15:06:51.681000-07:00'
                      updatedAt: '2018-08-13T15:06:51.684000-07:00'
                      role: 5ae0b2cb40cae73202bd66cc
                      roleName: Jane Doe
                      requestedBy: 5ae0b2cb40cae73202bd66cc
                      requestedByName: Jane Doe
                      status: APPROVED
                      startDate: '2018-08-22'
                      endDate: '2018-08-24'
                      startDateStartTime: '2018-08-22T12:00:00.235000-07:00'
                      endDateEndTime: '2018-08-24T15:00:00.235000-07:00'
                      startDateCustomHours: '8'
                      endDateCustomHours: '4'
                      comments: null
                      numHours: 20
                      numMinutes: 1200
                      leavePolicy: 5b998cf940cae798a83e87fd
                      leaveType: VACATION
                      policyDisplayName: Vacation
                      processedAt: '2018-08-13T15:06:51.684000-07:00'
                      processedBy: 5ae0b2cb40cae73202bd66cc
                      processedByName: Funky Admin
                      reasonForLeave: Spending some time at the beach
                      externalId: qwerty12345
                      roleTimezone: America/Los_Angeles
                      dates:
                        - date: '2018-08-22'
                          numMinutes: 480
                        - date: '2018-08-23'
                          numMinutes: 480
                        - date: '2018-08-24'
                          numMinutes: 240
      operationId: patch-leave_requests-leaveRequestId
      description: 'Update an existing leave request. With the exception of TILT-managed leave requests, updates are restricted based on status; APPROVED requests can not be updated with different dates, and the status itself can not be updated. Use the process endpoint to update the status of a PENDING request. For other updates, use the cancel endpoint to cancel the request, and create a new request with the updated information.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                requestedBy:
                  type: string
                status:
                  type: string
                  x-stoplight:
                    id: 11tla9d6gw331
                  description: Change the status of a request. This is only possible for TILT managed requests.
                startDate:
                  type: string
                endDate:
                  type: string
                startDateStartTime:
                  type: string
                endDateEndTime:
                  type: string
                startDateCustomHours:
                  type: string
                endDateCustomHours:
                  type: string
                reasonForLeave:
                  type: string
                  description: Updated reason for leave request. This may be updated even for an APPROVED request.
            examples:
              Updated LeaveRequest:
                value:
                  reasonForLeave: Spending some time at the beach
      security:
        - Token: []
      tags:
        - J. Leaves
      x-stoplight:
        id: o7qcuo86folji
  /platform/api/app_detail/app_matching_users:
    get:
      summary: GET Matching App Users
      tags:
        - I. Application Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        rippling_employee_id:
                          type: string
                        app_handle_id:
                          type: object
                          properties:
                            app_user_name:
                              type: string
              examples:
                Success:
                  value:
                    results:
                      - rippling_employee_id: 5f29dedd2620acf6c8f2369e
                        GMAIL_5f29dee52620acf6c8f23837:
                          - mike.smith.1
                        GMAIL_5f29dee42620acf6c8f23829:
                          - mike.smith.2
                      - rippling_employee_id: 5f29dedc2620acf6c8f23671
                        slack_5f29dee62620acf6c8f23855:
                          - james.width.1
                        gmail_5f29dee52620acf6c8f23837:
                          - james.width.1
                        gmail_5f29dee42620acf6c8f23829:
                          - james.width.2
      operationId: get-app-app_matching_users
      description: |
        Returns matching users and their app IDs based on the app handles.

        Note:There could be multiple instances of the same app. In this case, the API will return all instances in the format app_handle_app_owner_id.
      parameters:
        - schema:
            type: string
          in: query
          name: app_handles
          description: |
            CSV of app handles. See GET /app_detail/app_handles
      security:
        - Token: []
      x-internal: true
      x-stoplight:
        id: iejp76v2p08an
    parameters: []
  /platform/api/mark_app_installed:
    post:
      summary: Mark App Installed
      operationId: post-mark_app_installed
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  ok:
                    type: boolean
                required:
                  - ok
      description: |-
        This endpoint can be hit to mark your app as installed in Rippling, if you aren't hitting Rippling's other endpoints on installation. The endpoint does not require any scopes.

        Please note, hitting any other endpoint should mark your app as installed as well.
      security:
        - Token: []
      tags:
        - I. Application Management
      x-stoplight:
        id: v584n9ie97jb7
    parameters: []
components:
  parameters:
    limit:
      name: limit
      in: query
      description: Sets a limit on the returned values
      schema:
        type: integer
    offset:
      name: offset
      in: query
      description: Offsets the returned values
      schema:
        type: integer
    ein:
      name: EIN
      in: query
      description: 'Employer identification number, also known as the Federal Emplower Identification Number or the Federal Tax Identification Number.'
      schema:
        type: integer
    employeeId:
      name: employeeId
      in: path
      description: Unique identifier for the employee within Rippling.
      schema:
        type: integer
      required: true
    groupId:
      name: groupId
      in: path
      description: Unique identifier for the group within Rippling.
      schema:
        type: integer
      required: true
  schemas:
    Employee:
      title: Employee
      type: object
      description: An employee model object.
      x-tags:
        - Models
      properties:
        id:
          type: string
          description: This is the unique role ID of the employee. A role ID exists per 1 and only 1 company.
        userId:
          type: string
          description: This is the unique user ID of the employee. A userID can span across 1 or many companies.
          x-stoplight:
            id: qo8fmhxm9eaow
        name:
          type: string
          description: Full name of the employee
        preferredFirstName:
          type: string
        preferredLastName:
          type: string
        firstName:
          type: string
          description: First name of the employee
        lastName:
          type: string
          description: Last name of the employee
        employmentType:
          type: string
          enum:
            - CONTRACTOR
            - SALARIED_FT
            - SALARIED_PT
            - HOURLY_FT
            - HOURLY_PT
            - TEMP
          description: An ENUM of employment type
        title:
          type: string
          description: The employee's work title
        gender:
          nullable: true
          type: string
          enum:
            - MALE
            - FEMALE
            - null
          description: The employee's gender
        identifiedGender:
          nullable: true
          type: string
          enum:
            - MALE
            - FEMALE
            - NONBINARY
            - null
          description: The employee's identified gender
        department:
          type: string
          description: The employee's department name
        workLocation:
          $ref: '#/components/schemas/Address'
        worklocationNickname:
          type: string
          description: The work location nickname
        spokeId:
          type: string
          nullable: true
        endDate:
          type: string
          description: The employee's end date
          nullable: true
        roleState:
          type: string
          enum:
            - INIT
            - HIRED
            - ACCEPTED
            - ACTIVE
            - TERMINATED
          description: |-
            The employee's role status - roleState meanings:

            INIT: An initial record of an individual. An offer has not been made and they have not started working at the company.

            HIRED: An offer has been made but they have not accepted or started yet.

            ACCEPTED: An offer has been made and they have accepted, but they have not started yet.

            ACTIVE: The employee currently works at the company and their start date is today or in the past.

            TERMINATED: The employee is no longer active.
        workEmail:
          type: string
          description: The employee's work email
          nullable: true
        manager:
          type: string
          description: The unique identifier of the employee's manager. This value can be null.
        customFields:
          $ref: '#/components/schemas/CustomField'
        isInternational:
          type: boolean
          description: Whether the employee is an international employee or not.
        isManager:
          type: boolean
          description: Whether the employee is a manger
        workSchedule:
          description: The employee's weekly work schedule
        isRemote:
          type: boolean
          description: Whether the employee's job is remote
        employeeNumber:
          type: string
          description: 'This indicates the sequential employee number within their company. This number continues to grow as each employee is onboarded. i.e if you are the 65th employee to join the company with 32 active employees, the employeeNumber would be 65.'
          x-stoplight:
            id: shrqyh9ukihc6
        level:
          type: string
          x-stoplight:
            id: a73zkvy0w1qbb
          description: The level of the employee
        teams:
          type: array
          x-stoplight:
            id: 69m2nmyh7whyc
          description: An array of the teams that the employee is on
          items: {}
        photo:
          type: string
          x-stoplight:
            id: pdz71a9o6loo2
          description: The photo of the employee stored in Rippling
        smallPhoto:
          type: string
          x-stoplight:
            id: rc369x8ekxrw9
          description: The small photo of the employee stored in Rippling
    WorkLocation:
      title: WorkLocation
      type: object
      description: A work location object.
      x-tags:
        - Models
      properties:
        id:
          type: string
          x-stoplight:
            id: 42exrorjwftqh
        nickname:
          type: string
          x-stoplight:
            id: v9uytw8586aem
        address:
          $ref: '#/components/schemas/Address'
    Address:
      title: Address
      type: object
      description: An address object as stored within Rippling.
      x-tags:
        - Models
      nullable: true
      properties:
        streetLine1:
          type: string
        streetLine2:
          type: string
          x-stoplight:
            id: mmxhb8sdzu0b0
        zip:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        phone:
          type: string
          x-stoplight:
            id: yj4a1ddet87j2
        isRemote:
          type: boolean
          x-stoplight:
            id: nmlr0lk92e2hp
        steLocationCode:
          type: object
          x-stoplight:
            id: jxxg9s4455h1t
          properties:
            locationCode:
              type: string
              x-stoplight:
                id: rm5caha8efems
            stateCode:
              type: string
              x-stoplight:
                id: anth3c82ksjp9
            countyCode:
              type: string
              x-stoplight:
                id: k2onu543xceey
            cityCode:
              type: string
              x-stoplight:
                id: 09ilcuma9ds23
            schoolCode:
              type: string
              x-stoplight:
                id: p466avszwv90x
            municipalityCode:
              type: string
              x-stoplight:
                id: uxubttcx58lgc
            psdCode:
              type: string
              x-stoplight:
                id: irrn4il5jp5qy
            transitDistrictCode:
              type: string
              x-stoplight:
                id: 41w08evs09sqf
            isOverridden:
              type: string
              x-stoplight:
                id: 0zf0azi5b5dzv
    Group:
      title: Group
      type: object
      x-tags:
        - Models
      x-examples:
        Group:
          id: 5f397f3b3ca04e478d4575ad
          spokeId: lkjwbfskjsdbllskdb
          name: GroupTest4
          users:
            - 5c8f7f06c592917aeee1ea9f
          version: uu8ccavwbsb8stfn
      properties:
        name:
          type: string
          description: User-readable name of a Rippling group.
        id:
          type: string
        spokeId:
          type: string
          nullable: true
          description: Your id for the group; this should a unique string identifier.
        version:
          type: string
          description: The version unique identifier of the group.
        users:
          type: array
          description: An array of employee Rippling ids.
          items:
            type: string
    Department:
      title: Department
      type: object
      x-tags:
        - Models
      description: A company department object.
      nullable: true
      properties:
        name:
          type: string
          description: Name of the department
        id:
          type: string
          description: Unique identifier of the department
          x-stoplight:
            id: qlsjmzq7hh6dq
        parent:
          type: string
          description: 'id of the parent department, if one exists'
          default: null
          nullable: true
    CustomFields:
      title: CustomFieldMeta
      type: object
      description: A Custom Fields object within Rippling.
      x-tags:
        - Models
      x-examples:
        Sample:
          Id: string
          type: TEXT
          title: string
          required: true
      properties:
        Id:
          type: string
          description: The identifier of the specific custom field.
        type:
          type: string
          enum:
            - TEXT
            - DATE
            - NUMBER
            - CURRENCY
            - PERCENTAGE
            - SELECT
            - FILE
            - ID
            - RADIO
            - TEXTAREA
          description: Denotes the type of the custom field.
        title:
          type: string
          description: The title of the custom field.
        required:
          type: boolean
          description: Denotes whether the custom field is or is not mandatory
    Company:
      title: Company
      type: object
      description: A company object as represented within Rippling.
      x-tags:
        - Models
      x-examples:
        Sample:
          id: 5ec5595afa9c4e1728118cb5
          ein: null
          address:
            city: San Francisco
            state: CA
            country: US
            zip: '94110'
            streetLine1: 1234 21st Street
          tax_info:
            ein: null
            entityType: null
            incorporationDate: null
            soleProprieterSSN: null
            futaExempt: false
            signatory:
              id: 5ec5595dfa9c4e1728118d11
              name: James Smith
              firstName: James
              lastName: Smith
              dob: '2017-06-20'
              ssn: '238726664'
              phone: null
              title: Director of Product
              workEmail: cpitt+2@rippling.com
              signableName: James Smith
            nameWithIrs: null
            incorporationState: null
            entityName: Rippling_Integrations
            dba: null
            postalAddress: null
          payroll_settings:
            installState: ACTIVE
            usStates:
              - CA
              - IL
          workLocations:
            - id: 5ec5595cfa9c4e1728118ce1
              nickname: India
              address:
                city: Bangalore
                state: Karnataka
                country: IN
                zip: '560048'
                streetLine1: Prestige Shantiniketan
            - id: 5ec5595cfa9c4e1728118ce9
              nickname: San Francisco
              address:
                city: San Francisco
                zip: '94110'
                streetLine1: 1234 21st Street
                country: US
                state: CA
                steLocationCode:
                  cityCode: '277593'
                  psdCode: ''
                  schoolCode: ''
                  countyCode: '075'
                  stateCode: '06'
                  municipalityCode: ''
                  transitDistrictCode: ''
                  locationCode: 06-075-277593
            - id: 5ec5595cfa9c4e1728118cf1
              nickname: Chicago
              address:
                city: Chicago
                zip: '60606'
                streetLine1: 233 S Wacker Dr
                country: US
                state: IL
                steLocationCode:
                  cityCode: '423587'
                  psdCode: ''
                  schoolCode: ''
                  countyCode: '031'
                  stateCode: '17'
                  municipalityCode: ''
                  transitDistrictCode: ''
                  locationCode: 17-031-423587
          subscription: null
          primaryEmail: cpitt+2@rippling.com
          phone: '4155555555'
          name: Rippling_Integrations
      properties:
        id:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        workLocations:
          type: array
          items:
            $ref: '#/components/schemas/WorkLocation'
        primaryEmail:
          type: string
        phone:
          type: string
        name:
          type: string
        entities:
          $ref: '#/components/schemas/Entities'
    LeaveRequest:
      title: LeaveRequest
      type: object
      description: Leave request object.
      x-tags:
        - Models
      properties:
        id:
          type: string
          description: Unique identifier of the leave request.
        createdAt:
          type: string
        updatedAt:
          type: string
        role:
          type: string
          description: Unique identifier of the employee who is taking leave.
        roleName:
          type: string
        requestedBy:
          type: string
          nullable: true
        requestedByName:
          type: string
          description: Unique identifier of the employee who made the request (in most cases this is the same as role).
          nullable: true
        status:
          type: string
          enum:
            - PENDING
            - APPROVED
            - REJECTED
            - CANCELED
        startDate:
          type: string
        endDate:
          type: string
        startDateStartTime:
          type: string
          nullable: true
        endDateEndTime:
          type: string
          nullable: true
        startDateCustomHours:
          type: string
          nullable: true
        endDateCustomHours:
          type: string
          nullable: true
        comments:
          type: string
          nullable: true
        numHours:
          type: integer
          nullable: true
        numMinutes:
          type: integer
          nullable: true
        leavePolicy:
          type: string
        leaveTypeUniqueId:
          type: string
          enum:
            - VACATION
            - SICK
            - JURY_DUTY
          x-stoplight:
            id: 5027t5htx71ca
        policyDisplayName:
          type: string
        reasonForLeave:
          type: string
          nullable: true
        processedAt:
          type: string
          nullable: true
        processedBy:
          type: string
          description: Unique identifier of the employee who approved or rejected the request. This may be null.
          nullable: true
        processedByName:
          type: string
          nullable: true
        roleTimezone:
          type: string
          description: 'Timezone of the role. This will be work location timezone, or home timezone for employees without a work location.'
          nullable: true
        dates:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              numMinutes:
                type: integer
        isPaid:
          type: boolean
          description: 'If the leave request is paid this will be TRUE. Otherwise, this will be FALSE.'
          x-stoplight:
            id: kpec0dv84c37r
        managedBy:
          type: string
          x-stoplight:
            id: kpec0dv84c37r
          enum:
            - PTO
            - LEAVES
            - TILT
          description: This indicates the system that manages the Leave Request. PTO = managed by Rippling's Time Off app. LEAVES = managed by Rippling's Leave Management app. TILT = managed by third-party partner Tilt.
        partialDays:
          type: array
          x-stoplight:
            id: j5hp2dwf5fq4x
          items:
            x-stoplight:
              id: 3blh0wzzsznnx
            type: object
            nullable: true
            properties:
              partialDay:
                type: string
                x-stoplight:
                  id: x3jcwqkp9dmzu
                format: date
              numMinutes:
                type: integer
                x-stoplight:
                  id: a5rt8hxcn4yww
    LeaveBalances:
      title: LeaveBalances
      x-stoplight:
        id: rfq9spaeyvk4v
      type: object
      description: Leave balances object
      x-tags:
        - Models
      properties:
        companyLeaveType:
          type: string
          x-stoplight:
            id: 2l1afnr3vwr3g
          description: This is the unique role ID of the company leave types. Corresponds to the ids in response of GET Company Leave Types
        isBalanceUnlimited:
          type: boolean
          x-stoplight:
            id: 1ajemtjl037ej
          description: 'true if employee''s balance corresponding to the company leave type is unlimited, else false'
        balanceWithFutureRequests:
          type: number
          x-stoplight:
            id: g4ikgjoqo4vl1
          description: The remaining balance in minutes for the employee corresponding to the company leave type with future leave requests considered.
        balanceWithoutFutureRequests:
          type: number
          x-stoplight:
            id: q7o0o60yum9yr
          description: The remaining balance in minutes for the employee corresponding to the company leave type with future leave requests not considered.
    CompanyLeaveType:
      title: CompanyLeaveType
      type: object
      description: Company leave request object
      x-tags:
        - Models
      properties:
        id:
          type: string
          description: Unique identifier of the company leave request
        leaveType:
          type: string
          description: Company leave type key
        name:
          type: string
          description: Company leave type name
        description:
          type: string
        isUnpaid:
          type: boolean
          description: Is leave type unpaid
    Team:
      title: Team
      type: object
      x-examples:
        Team 1:
          id: Team 1
          name: 5da93c1fa4572b29a5511544
          parent: 5da93c1fa4572b29a5511544
      description: A team is a self-defined group of employees within Rippling.
      x-tags:
        - Models
      properties:
        id:
          type: string
          description: The identifier of the team.
        name:
          type: string
          description: The name of the team.
        parent:
          type: string
          nullable: true
          description: The parent team (if this team is a subteam within a larger team).
    Level:
      title: Level
      type: object
      description: 'Levels enable for self-defined,company-wide position levels, such as Manager, Engineering Manager, Executive, etc.'
      x-tags:
        - Models
      properties:
        id:
          type: string
          description: Unique identifier of the level.
        name:
          type: string
          description: Name of the level.
        parent:
          type: string
          nullable: true
          description: The unique identifier of the parent level.
    Authenticated-User-(Me):
      title: Authenticated-User-(Me)
      type: object
      description: Information about the Rippling user whose token is being used to access Rippling's API.
      properties:
        id:
          type: string
          description: Unied identifier of the user (likely an admin).
        workEmail:
          type: string
          description: Work email of the user.
        company:
          type: string
          description: Unique identifier of the company.
      x-examples:
        Success:
          id: 5ec5595dfa9c4e1728118d11
          workEmail: cpitt+2@rippling.com
          company: 5ec5595afa9c4e1728118cb5
      x-tags:
        - Models
    GroupUpdatePayload:
      title: GroupUpdatePayload
      type: object
      description: This payload should be used when updating existing groups.
      x-examples:
        Group Update:
          name: GroupTest
          spokeId: lkjwbfskjsdbllskdb
          users:
            - ''
          version: uu8ccavwbsb8stfn
      x-tags:
        - Models
      properties:
        name:
          type: string
          description: The name of the Group.
        spokeId:
          type: string
          description: The external identifier of the Group.
        users:
          type: array
          description: The array of users within the Group.
          items: {}
        version:
          type: string
          description: The version identifier of the Group.
    Candidate:
      title: Candidate
      type: object
      description: The Rippling candidate model.
      x-tags:
        - Models
      properties:
        name:
          type: string
          description: The candidate's name.
        email:
          type: string
          description: The candidate's email.
        jobTitle:
          type: string
          description: The candidate's job title.
        phoneNumber:
          type: string
          description: The candidate's phone number.
        candidateId:
          type: string
          description: The unique identifier of the candidate from the ATS.
        startDate:
          type: string
          description: The would-be start date of the candidate.
          format: date
        salaryUnit:
          type: string
          description: 'An ENUM string value, denoting the frequency at which the candidate should be paid once the role begins. Note, the PAY_PERIOD ENUM implies the candidate is paid as per a custom pay period.'
          enum:
            - HOUR
            - DAY
            - WEEK
            - MONTH
            - PAY_PERIOD
        salaryPerUnit:
          type: number
          description: The decimal value that the candidate gets paid every salaryUnit time period.
        signingBonus:
          type: number
          description: 'The bonus cash given to the candidate as a part of a one time payment, with two decimal digit precision.'
          format: double
        currency:
          type: string
          description: A string field of the official currency as listed in ISO 4217.
        equityShares:
          type: integer
          description: The number of shares that will be given to the candidate.
        department:
          type: string
          description: This is the id of the department from GET/departments.
        employmentType:
          type: string
          description: The ENUM type of employment the user will have within Rippling.
          enum:
            - CONTRACTOR
            - SALARIED_PT
            - SALARIED_FT
            - HOURLY_FT
            - HOURLY_PT
            - TEMP
        workLocation:
          type: string
          description: This is the id of the worklocation from GET/work_locations.
          x-stoplight:
            id: 4i8qwekb2fsyp
        attachments:
          type: array
          items:
            type: object
            description: An array of json objects containing file names and public file URLs containing documents pertaining to the candidate.
            properties:
              file_name:
                type: string
                description: The file name.
              file_url:
                type: string
                description: The public URL and name of a pdf/docx/doc/odt file containing documents pertaining to the candidate.
    Event:
      title: Event
      type: object
      description: |
        The event model for company activity.

        Please note, the event type can be one of the following:

        - EXTERNAL_ACCONT_CREATE
        - EXTERNAL_ACCOUNT_INVITE
        - EXTERNAL_ACCOUNT_DELETE
        - EXTERNAL_ACCOUNT_SUSPEND
        - EXTERNAL_ACCOUNT_PASSWORD_RESET
        - EXTERNAL_GROUP_ADD
        - EXTERNAL_GROUP_REMOVE
        - EXTERNAL_GROUP_MEMBER_REMOVE
        - EXTERNAL_GROUP_MEMBER_ADD
        - EXTERNAL_SSO_GRANT
        - EXTERNAL_SSO_REVOKE
        - EXTERNAL_SSO_SIGNIN
        - RPASS_ITEM_SHARED
        - RPASS_ITEM_UNSHARED
        - RPASS_ITEM_USED
        - USER_LOGIN_SUCCESS
        - USER_LOGIN_FAILED
        - ACCOUNT_PASSWORD_RESET
        - ACCOUNT_PASSWORD_CHANGED
        - TWO_FACTOR_DEVICE_RESET
      properties:
        id:
          type: string
          description: Unique identifier of the event.
        request_data:
          type: object
          nullable: true
          description: Geographic details from where the event was recorded.
          properties:
            ip:
              type: string
              description: Event IP addresss.
            city:
              type: string
              description: City the event was triggered from.
            country:
              type: string
              description: Country the event was triggered from.
            latitude:
              type: string
              description: Latitude the event was triggered from.
            longitude:
              type: string
              description: Longitude the event was triggered from.
        linked_events:
          type: array
          description: An array of event identifiers that are linked to the event.
          items:
            type: string
        subjects:
          type: array
          description: The list of objects of the event.
          items:
            type: object
            nullable: true
            properties:
              instance:
                type: string
                description: Unique key for the event object.
              type:
                type: string
                description: An ENUM value for the type of object.
                enum:
                  - ROLE
                  - SPOKE
                  - RPASS_ITEM
                  - SPOKE_USER
                  - GROUP
              display_name:
                type: string
                description: Name used within Rippling.
              icon:
                type: string
                nullable: true
                description: Icon used within Rippling.
        event_type:
          type: string
          description: An ENUM value for the type of the event.
          enum:
            - EXTERNAL_ACCOUNT_CREATE
            - EXTERNAL_ACCOUNT_INVITE
            - EXTERNAL_ACCOUNT_DELETE
            - EXTERNAL_ACCOUNT_SUSPEND
            - EXTERNAL_ACCOUNT_PASSWORD_RESET
            - EXTERNAL_GROUP_ADD
            - EXTERNAL_GROUP_REMOVE
            - EXTERNAL_SSO_GRANT
            - EXTERNAL_SSO_REVOKE
            - EXTERNAL_SSO_SIGNIN
            - RPASS_ITEM_SHARED
            - RPASS_ITEM_UNSHARED
            - RPASS_ITEM_USED
            - USER_LOGIN_SUCCESS
            - USER_LOGIN_FAILED
            - ACCOUNT_PASSWORD_RESET
            - ACCOUNT_PASSWORD_CHANGED
            - TWO_FACTOR_DEVICE_RESET
            - EXTERNAL_GROUP_MEMBER_REMOVE
        timestamp:
          type: string
          description: Timestamp at which the event was recorded.
        company:
          type: string
          description: Unique identifier for the company.
        spoke:
          type: string
          nullable: true
          description: Unique identifier for the external application for which the event was recorded. This will be Null for events that don't correspond to an external appliction (e.g. Rippling system and RPass events).
        initiator:
          type: object
          nullable: true
          description: The actor of the event.
          properties:
            type:
              type: string
              description: ENUM value for the type of actor.
              enum:
                - ROLE
                - SYSTEM
                - EXTERNAL
            role:
              type: string
              nullable: true
              description: 'A unique identifier for the employee that initiated the action, if the type is ROLE.'
            display_name:
              type: string
              description: The name used within Rippling.
            icon:
              type: string
              nullable: true
              description: The icon used within Rippling.
        event_reason:
          type: object
          nullable: true
          description: 'Reason for the event, tied to the type of eveent.'
          properties:
            reason:
              type: string
              description: Reason for the event.
            message:
              type: string
              description: Message of the event.
        name:
          type: string
          description: 'Display name for the event, tied to the type of event.'
      x-tags:
        - Models
    CustomField:
      title: CustomFields
      x-stoplight:
        id: lq7tm2y597gj6
      type: object
      x-examples:
        Sample:
          COVID-19 vaccination status: Partially vaccinated
          Marital status: Married
      properties:
        customFieldTitle1:
          type: string
        customFieldTitleN:
          type: string
      description: ''
      x-tags:
        - Models
    Entities:
      type: object
      x-examples:
        Example 1:
          CA:
            - id: 6490de7ff33b0e05dbf395ef
              entityInfo:
                legalName: Acme Co
                businessNumber: '785235468'
              isEor: false
            - id: 64b6de6a781b49cf652a84ad
              entityInfo:
                legalName: People Center
                businessNumber: '914874668'
              isEor: false
      title: Entities
      description: This model represents the legal entities inside of a given company. Legal entities based in Canada (CA) are currently supported at this time.
      properties:
        CA:
          type: array
          description: CA represents Canada.
          items:
            type: object
            properties:
              id:
                type: string
                description: The unique Rippling ID of the legal entity
              entityInfo:
                type: object
                properties:
                  legalName:
                    type: string
                    description: The legal name of the entity
                  businessNumber:
                    type: string
                    description: The Canada Business Number
              isEor:
                type: boolean
                description: 'If set to true, the legal entity is Rippling''s EOR. If set to false, the legal entity is not on Rippling''s EOR.'
  securitySchemes:
    Token:
      type: http
      scheme: bearer
security:
  - Authorization Code: []
  - authorizationCode: []
